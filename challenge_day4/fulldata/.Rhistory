# Check if jsonlite is installed; if not, install it
if (!requireNamespace("jsonlite", quietly = TRUE)) {
install.packages("jsonlite", repos = "http://cran.rstudio.com/")
}
# Load the required library
library(jsonlite)
# Read the JSON file into a data frame
json_data <- fromJSON("data1.json")
# Read the JSON file into a data frame
json_data <- fromJSON("data1.json")
# Read the JSON file into a data frame
json_data <- fromJSON(readLines("data1.json"))
# Read the JSON file into a data frame
json_data <- fromJSON(readLines("fulldata/data1.json"))
getwd()
setwd(C:\Users\jotin\OneDrive\Documents\UvA\Semester_3\DE\Bootcamp\computational-thinking-week-group-trash\challenge_day4\fulldata)
setwd(..)
setwd(dirname(C:\Users\jotin\OneDrive\Documents\UvA\Semester_3\DE\Bootcamp\computational-thinking-week-group-trash\challenge_day4\fulldata))
setwd("C:\Users\jotin\OneDrive\Documents\UvA\Semester_3\DE\Bootcamp\computational-thinking-week-group-trash\challenge_day4\fulldata")
setwd('C:\Users\jotin\OneDrive\Documents\UvA\Semester_3\DE\Bootcamp\computational-thinking-week-group-trash\challenge_day4\fulldata')
setwd('C:\\Users\jotin\OneDrive\Documents\UvA\Semester_3\DE\Bootcamp\computational-thinking-week-group-trash\challenge_day4\fulldata')
setwd("..")
getwd()
setwd("fulldata")
getwd
getwd()
json_data <- fromJSON(readLines("fulldata/data1.json"))
json_data <- fromJSON(readLines("data1.json"))
View(json_data)
# Convert the 'people' list to a data frame
people_df <- as.data.frame(json_data$people)
View(people_df)
for(col_name in names(people_df)) {
if(is.numeric(people_df[[col_name]])) {
# Calculate mean, excluding NAs
col_mean <- mean(people_df[[col_name]], na.rm = TRUE)
for(col_name in names(people_df)) {
if(is.numeric(people_df[[col_name]])) {
# Calculate mean, excluding NAs
col_mean <- mean(people_df[[col_name]], na.rm = TRUE)
# Replace NAs with the calculated mean
people_df[[col_name]][is.na(people_df[[col_name]])] <- col_mean
}
}
colMeans()
col_mean()
col_mean
view(col_mean)
# Replace the 'people' list in the original data with the modified data frame
json_data$people <- person_df
for(col_name in names(people_df)) {
if(is.numeric(people_df[[col_name]])) {
# Calculate mean, excluding NAs
col_mean <- mean(people_df[[col_name]], na.rm = TRUE)
# Replace NAs with the calculated mean
people_df[[col_name]][is.na(people_df[[col_name]])] <- col_mean
}
}
# Replace the 'people' list in the original data with the modified data frame
json_data$people <- person_df
View(json_data)
# Convert the updated data back to JSON format
json_text <- toJSON(json_data, pretty = TRUE)
# Overwrite the original JSON file
write(json_text, "data2.json")
# Overwrite the original JSON file
write(json_text, "data2.json")
people_df[, "Academic Skills"]
# Check if jsonlite is installed; if not, install it
if (!requireNamespace("jsonlite", quietly = TRUE)) {
install.packages("jsonlite", repos = "http://cran.rstudio.com/")
}
# Load the required library
library(jsonlite)
# Read the JSON file into a data frame
setwd("..")
setwd("fulldata")
json_data <- fromJSON(readLines("data1.json"))
# Convert the 'people' list to a data frame
people_df <- as.data.frame(json_data$people)
# Replace NAs with column means
for(col_name in names(people_df)) {
if(is.numeric(people_df[[col_name]])) {
# Calculate mean, excluding NAs
col_mean <- mean(people_df[[col_named]], na.rm = TRUE)
# Replace NAs with the calculated mean
people_df[[col_name]][is.na(people_df[[col_name]])] <- col_mean
}
}
# Replace the 'people' list in the original data with the modified data frame
json_data$people <- person_df
# Convert the updated data back to JSON format
json_text <- toJSON(json_data, pretty = TRUE)
# Overwrite the original JSON file
write(json_text, "data2.json")
if (!requireNamespace("jsonlite", quietly = TRUE)) {
install.packages("jsonlite", repos = "http://cran.rstudio.com/")
}
# Load the required library
library(jsonlite)
# Read the JSON file into a data frame
setwd("..")
setwd("fulldata")
json_data <- fromJSON(readLines("data1.json"))
# Convert the 'people' list to a data frame
people_df <- as.data.frame(json_data$people)
# Replace NAs with column means
for(col_name in names(people_df) {
for(col_name in names(people_df)) {
if(is.numeric(people_df[[col_name]])) {
# Calculate mean, excluding NAs
col_mean <- mean(people_df[[col_name]], na.rm = TRUE)
# Replace NAs with the calculated mean
people_df[[col_name]][is.na(people_df[[col_name]])] <- col_mean
}
}
json_data$people <- person_df
json_data$people <- people_df
# Convert the updated data back to JSON format
json_text <- toJSON(json_data, pretty = TRUE)
# Overwrite the original JSON file
write(json_text, "data2.json")
json_data <- fromJSON(readLines("data2.json"))
people_df_2 <- as.data.frame(json_data$people)
View(people_df_2)
